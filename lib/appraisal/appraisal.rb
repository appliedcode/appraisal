require 'appraisal/gemfile'
require 'appraisal/command'
require 'fileutils'
require 'pathname'

module Appraisal
  # Represents one appraisal and its dependencies
  class Appraisal
    attr_reader :name, :gemfile

    def initialize(name, source_gemfile)
      @name = name
      @gemfile = source_gemfile.dup
    end

    def gem(name, *requirements)
      gemfile.gem(name, *requirements)
    end

    def write_gemfile
      ::File.open(gemfile_path, "w") do |file|
        signature = "# This file was generated by Appraisal"
        file.puts([signature, gemfile.to_s].reject {|s| s.empty? }.join("\n\n"))
      end
    end

    def install
      Command.new(bundle_command).run
    end

    def gemfile_path
      unless gemfile_root.exist?
        gemfile_root.mkdir
      end

      gemfile_root.join("#{clean_name}.gemfile").to_s
    end

    def relativize
      current_directory = Pathname.new(Dir.pwd)
      relative_path = current_directory.relative_path_from(gemfile_root).cleanpath
      lockfile_content = ::File.read(lockfile_path)

      ::File.open(lockfile_path, 'w') do |file|
        file.write lockfile_content.gsub(/#{current_directory}/, relative_path.to_s)
      end
    end

    def bundle_command
      gemfile = "--gemfile='#{gemfile_path}'"
      "bundle check #{gemfile} || bundle install #{gemfile}"
    end

    private

    def gemfile_root
      Pathname.new(::File.join(Dir.pwd, "gemfiles"))
    end

    def lockfile_path
      "#{gemfile_path}.lock"
    end

    def clean_name
      name.gsub(/[^\w\.]/, '_')
    end
  end
end
